#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

#include "./Headers/arbol.h"
#include "./Headers/lista.h"

#include "./Headers/pedidos.h"
#include "./Headers/cliente.h"

nodoArbolCliente *leerArchivoClientes(nodoArbolCliente *arbol, long int d[], int id[], int *validos);
void leerPedidos(long int d[], int id[], int v);
int main()
{

	nodoArbolCliente *arbolito = inicArbol();

	long int d[50];
	int id[50];
	int v = 0;
	arbolito = leerArchivoClientes(arbolito, d, id, &v);

	// inOrden(arbolito);

	leerPedidos(d, id, v);
	system("pause");

	printf("\nAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n");

	preOrden(arbolito);

	system("pause");

	return 0;
}

nodoArbolCliente *leerArchivoClientes(nodoArbolCliente *arbol, long int d[], int id[], int *validos)
{
	FILE *a = fopen(ArchivoClientes, "r+b");
	stCliente c;
	if (a)
	{
		while (fread(&c, sizeof(stCliente), 1, a) > 0)
		{
			arbol = agregarNodoPorDni(arbol, c);
			d[*validos] = c.dni;
			id[*validos] = c.idCliente;
			(*validos)++;
		}
		fclose(a);
	}

	return arbol;
}

void convertirPedidos()
{
}

void leerArchivoPedidos(nodoArbolCliente *arbol)
{
	FILE *a = fopen(ArchivoPedidos, "r+b");
	stPedido p;
	nodoArbolCliente *nodoArbol = NULL;
	if (a)
	{
		while (fread(&p, sizeof(stPedido), 1, a) > 0)
		{
		}
		fclose(a);
	}
}

void leerPedidos(long int d[], int id[], int v)
{
	stPedido aux;
	FILE *a = fopen(ArchivoPedidos, "r+b");
	int contador = 0;
	if (a)
	{
		while (fread(&aux, sizeof(stPedido), 1, a) > 0)
		{
			contador++;
		}
		fclose(a);
	}

	stPedido *algo = (stPedido *)malloc(sizeof(stPedido) * contador);

	FILE *b = fopen(ArchivoPedidos, "r+b");
	int x = 0;
	int r = 0;
	if (b)
	{
		while (fread(&aux, sizeof(stPedido), 1, a) > 0)
		{
			algo[x] = aux;
			// algo[x].dniCliente = d[buscarClientePorID(aux.idCliente)];

			mostrarUnPedido(algo[x]);
		}
	}
}